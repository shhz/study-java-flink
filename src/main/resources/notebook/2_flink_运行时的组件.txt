作业管理器 JobManager
    控制一个应用程序进行的主进程。
    JobManager 会先接收到要执行的应用程序，这个应用程序会包括：作业图（JobGraph）、逻辑数据流程图（logical dataflow
graph）和打包了所有类、库和其他资源的jar包。
    JobManager 会把 JobGraph 转换成一个物理层面的数据流图，这个图叫做“执行图”（ExecutionGraph），包含了所有可以并发执
行的任务。
    JobManager 会向资源管理器（ResourceManager）请求执行任务必要的资源，也就是任务管理器（TaskManager）上的插槽（slot）。
一旦它获取到了足够的资源，就会将执行图分发到真正运行它们的 TaskManager 上。而在运行过程中，JobManager 会负责所有需要中央
协调的操作，比如说检查点（check points）的协调。

任务管理器 TaskManager
    Flink 中的工作进程。通常在 flink 中会有多个 TaskManager 运行，每一个 TaskManager 都包含了一定数量的插槽（slots）。
插槽的数量限制了 TaskManager 能够执行的任务数量。
    启动之后， TaskManager 会向资源管理器注册它的插槽；收到资源管理器的指令后， TaskManager 就会将一个或者多个插槽提供给
JobManager 调用。 JobManager 就可以向插槽分配任务（tasks）来执行了。
    在执行过程中，一个 TaskManager 可以跟其他运行同一应用程序的 TaskManager 交换数据。

资源管理器 ResourceManager
    主要负责管理任务管理器（TaskManager）的插槽（slot），TaskManager 插槽是 Flink 中定义的处理资源单元。
    Flink 为不同的环境和资源管理工具提供了不同的资源管理器，比如 YARN、Mesos、K8s，以及 standalone 部署。
    当 JobManager 申请插槽资源时，ResourceManager 会将有空闲插槽的 TaskManager 分配给 JobManager。如果 ResourceManager
没有足够的插槽来满足 JobManager 的请求，它还可以向资源提供平台发起会话，以提供启动 TaskManager 进程的容器。

分发器 Dispacher
    可以跨作业运行，它为应用提交提供了 REST 接口。
    当一个应用被提交执行时，分发器就会启动并将应用移交给一个 JobManager。
    Dispacher 也会启动一个 Web UI ，用来方便地展示和监控作业执行的信息。
    Dispacher 在架构中可能并不是必须的，这取决于应用提交运行的方式。
